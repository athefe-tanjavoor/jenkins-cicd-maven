pipeline {
    agent {
        docker {
            image 'maven:3.9.6-eclipse-temurin-17'
            args '-u root' // Fixes permission issue
        }
    }

    environment {
        PATH = "$PATH:/usr/local/bin"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/athefe-tanjavoor/jenkins-cicd-maven.git'
            }
        }

        stage('Pre-Cleanup') {
            steps {
                sh '''
                    echo "Force killing any process using spring-boot-web.jar"
                    fuser -k java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/spring-boot-web.jar || true
                    echo "Removing target directory"
                    rm -rf java-maven-sonar-argocd-helm-k8s/spring-boot-app/target
                '''
            }
        }

        stage('Build and Test') {
            steps {
                sh '''
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn clean package
                '''
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONAR_USER_HOME = "${env.WORKSPACE}/.sonar"
                scannerHome = tool 'sonar-scanner'
            }
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=springboot \
                        -Dsonar.java.binaries=target \
                        -Dsonar.projectName="SpringBoot CICD"
                    '''
                }
            }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
